@model ArtWebApp.DataModels.LabRequestMaster
@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/ArtMVC/Views/Shared/_Layout.cshtml";
}
<h2>Lab Reqest Details</h2>

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.LabRequestID)
    <div class="form-group">
        @Html.LabelFor(model => model.LabRequestNum, "Freight Request#", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(modelItem => Model.LabRequestNum)
        </div>
        @Html.LabelFor(model => model.Supplier_pk, "From Party", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.SupplierMaster.Supplier_PK, (SelectList)ViewBag.SupplierPK, htmlAttributes: new { @class = "chosen-select  form-control" })
            @Html.HiddenFor(modelItem => Model.SupplierMaster.Supplier_PK)
        </div>

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Merchandiser, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(modelItem => Model.Merchandiser)
        </div>
        @Html.LabelFor(model => model.Reason, "Reason", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(modelItem => Model.Reason)


        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ApproximateCharges, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DisplayFor(modelItem => Model.ApproximateCharges)
        </div>
        @Html.LabelFor(model => model.Remark, "Remark", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">

            @Html.EditorFor(modelItem => Model.Remark)


        </div>
    </div>




    <div class="form-group">
        <table class="table table-responsive table-bordered">
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Atc
                </th>
                <th>
                    FreightCharge
                </th>
                <th>
                    Remark
                </th>
                <th>
                    AllowedValue
                </th>
                <th>
                    UsedValue
                </th>
                <th>
                    FirstLabCharge
                </th>
                <th></th>
            </tr>
            @{ Decimal total = 0;
                foreach (var item in Model.LabChargeDetails)
                {

                    total = total + Decimal.Parse(item.LabCharge.ToString());
                    <tr>
                        <td class="LabReqestDetId">
                            @item.LabReqDetID

                        </td>
                        <td class="AtcNum">
                            @Html.DisplayFor(modelItem => item.AtcMaster.AtcNum)
                        </td>
                        <td class="Labcharge">
                            @Html.EditorFor(modelItem => item.LabCharge)
                            <div id="OldLabCharge" class="OldLabCharge">
                                @Html.HiddenFor(modelItem => item.LabCharge)
                            </div>
                        </td>
                        <td class="Remark">
                            @Html.EditorFor(modelItem => item.Remark)
                        </td>
                        <td class="AllowedValue">
                            @Html.DisplayFor(modelItem => item.AllowedValue)
                        </td>
                        <td class="UsedValue">
                            @Html.DisplayFor(modelItem => item.UsedValue)
                        </td>
                        <td class="FirstLabCharge">
                            @Html.DisplayFor(modelItem => item.FirstLabCharge)
                        </td>

                        <td></td>
                    </tr>
                }
                <tr>
                    <td></td>
                    <td>
                        Total :  @total
                    </td>
                    <td></td>
                    <td></td>
                </tr>

            }


        </table>
    </div>
</div>
<div>
    <input id="EditLabRequest" type="button" value="Save" class="btn btn-default show" />
</div>
<p>
    @Html.ActionLink("Print", "Print", new { id = Model.LabRequestID }) |
    @Html.ActionLink("Back to List", "Index")
</p>

<script type="text/javascript">
    $(document).ready(function () {


        $("#EditLabRequest").click(function (e, params) {
            debugger;

            var sup_Id = $('#SupplierMaster_Supplier_PK').find('option:selected').val();
            var list = [];
            var Isok = true;
            var approved = 'Y'
            $('.LabReqestDetId').each(function () {

                var LabReqestDetId = this.innerHTML;
                var newvalue = $(this).siblings('td.Labcharge').children(':first').val();
                var chenge_remark = $(this).siblings('td.Remark').children(':first').val();
                var AllowedValue = $(this).siblings('td.AllowedValue')[0].innerHTML;
                var UsedValue = $(this).siblings('td.UsedValue')[0].innerHTML;
                var FirstLabCharge = $(this).siblings('td.FirstLabCharge')[0].innerHTML;

                var allowed10percent = parseFloat(FirstLabCharge) + (parseFloat(FirstLabCharge) * 10 / 100)
                var OldFreightCharge = $(this).siblings('td.Labcharge').children('.OldLabCharge').find('input').val();
                var ActualUsed = parseFloat(UsedValue) - parseFloat(OldFreightCharge);
                var ActualAllowedValue = parseFloat(AllowedValue) - parseFloat(ActualUsed);

                if (parseFloat(newvalue) > parseFloat(ActualAllowedValue)) {
                    alert('The Value is greator that Allowed value');
                    Isok = false;
                }


                if (parseFloat(newvalue) > parseFloat(allowed10percent)) {
                    approved = 'N'

                }
                var orderItem = {
                    FreightReqDetID: LabReqestDetId,

                    FreightCharge: parseFloat(newvalue),
                    Remark: chenge_remark

                }
                list.push(orderItem);

            });

            var data = {

                FreightChargeDetails: list,
                LabRequestID: $('#LabRequestID').val(),
                Merchandiser: $('#Merchandiser').val(),
                Reason: $('#Reason').val(),
                SupplierPK: parseInt(sup_Id),
                IsApproved: approved,
                Remark: $('#Remark').val().trim(),


            }



            if (Isok == true) {
                $(this).val('Please wait...');
                $.ajax({
                    type: 'POST',
                    url: '/ArtMVCMerchandiser/LabChargeRequest/Edit',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function (data) {
                        if (data.status) {
                            alert('Successfully saved ' + data.Reqnum);
                            //here we will clear the form

                            list = [];
                            $('#orderNo,#orderDate,#description').val('');
                            $('#orderdetailsItems').empty();
                        }
                        else {
                            alert('Error');
                        }
                        $('#submit').val('Save');
                    },
                    error: function (error) {
                        console.log(error);
                        $('#submit').val('Save');
                    }
                });


                $(this).val('Save');
            }



        });











    });

</script>