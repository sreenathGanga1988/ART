@model ArtWebApp.Areas.CuttingMVC.Models.LaySheetShortageViewModel
<script src="~/JQuery/GridJQuery.js"></script>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script>
  
    $(document).ready(function () {




        $('#SelectAll').change(function () {
            // this will contain a reference to the checkbox   
            if (this.checked) {
                // the checkbox is now checked 

                var parenttable = $(this).closest('table');
                parenttable.children('tr,td, th').css('background-color', '#8AE1E9');
                $("[id$=IsSelected]").prop('checked', true);
                getshortagesum();

            } else {


                if ($('[id$=IsSelected]:checked').length == $('[id$=IsSelected]').length) {

                    $("[id$=IsSelected]").prop('checked', false);
                }
                // the checkbox is now no longer checked
             
            }
            getshortagesum();
        });


        $("[id$=IsSelected]").change(function () {

            if (this.checked) {

                $(this).closest('tr').children('td,th').css('background-color', '#8AE1E9');
            }
            else
            {
                $(this).closest('tr').children('td,th').css('background-color', '#F5F5F7');
                
            }

            getshortagesum();

        });

    });


   
    function getshortagesum()
    {
        debugger
        var table = document.getElementsByClassName("table")[0];
        var sum = 0
        var endbitsum = 0;
        for (var i = 1; i < table.rows.length - 1; i++) {
            
            var currentrow = table.rows[i];
          
            var chkConfirm = currentrow.getElementsByClassName('IsSelected')[0];

           
            if (chkConfirm.checked) {
                var txt_ayard = currentrow.getElementsByClassName('ExcessOrShort')[0];

                
                
                sum = sum + parseFloat(txt_ayard.innerHTML);
               
            }

        }
        var totalyardfooter = document.getElementsByClassName("ExcessOrShortfooter")[0];
        totalyardfooter.value = sum;

      
    }

</script>
<div class="container">
    <table class="table table-bordered table-striped table-responsive">
        <tr>
            <th>
                @Html.CheckBox("SelectAll")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.LaySheetDet_PK)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.LayCutNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.RollNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.NoOfPlies)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.FabUtilized)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.EndBit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.BalToCut)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.ExcessOrShort)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.IsRecuttable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.Roll_PK)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.ShadeGroup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.ShrinkageGroup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.WidthGroup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.approvelaysheetModel.MarkerType)
            </th>

        </tr>

        @if (Model != null)
        {



            for (int i = 0; i < Model.RollDetails.Count; i++)
            {

                <tr>
                    <td>
                        @Html.EditorFor(modelItem => Model.RollDetails[i].IsSelected, new { htmlAttributes = new { @class = "IsSelected" } })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].LaySheetDet_PK)
                        @Html.HiddenFor(model => Model.RollDetails[i].LaySheetDet_PK, new { htmlAttributes = new { @class = "form-control" } })


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].LayCutNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].RollNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].NoOfPlies)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].FabUtilized)
                    </td>
                    <td>
                        <div class="endbit">
                            @Html.DisplayFor(modelItem => Model.RollDetails[i].EndBit)
                        </div>    
                      
                        @Html.HiddenFor(model => Model.RollDetails[i].EndBit, new { htmlAttributes = new { @class = "form-control" } })



                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].BalToCut)
                    </td>
                    <td>   <div class="ExcessOrShort">
                                 @Html.DisplayFor(modelItem => Model.RollDetails[i].ExcessOrShort)                             
                        </div>                             
                        @Html.HiddenFor(model => Model.RollDetails[i].ExcessOrShort)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].IsRecuttable)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].Roll_PK)
                        @Html.HiddenFor(model => Model.RollDetails[i].Roll_PK, new { htmlAttributes = new { @class = "form-control" } })


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].ShadeGroup)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].ShrinkageGroup)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].WidthGroup)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.RollDetails[i].MarkerType)
                    </td>

                </tr>

            }

           




        }

        <tfoot>
            <tr>
                <th>
                    Total
                </th>
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
                <th>
                    
                </th>
                <th>

                </th>
                <th>
                    <input id="txt" class="ExcessOrShortfooter" />
                </th>
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
                <th>
                  
                </th>
                <th>

                </th>

            </tr>

        </tfoot>



    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="Submit" type="submit" value="Submit Fabric request" class="btn btn-default show" />
        </div>
    </div>
</div>
